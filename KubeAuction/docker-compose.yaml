version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: kubeauction-mongo
    ports:
      - "27017:27017"
    volumes:
      - /tmp/kubeauction/mongo:/data/db
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    networks:
      - kubeauction-net

  redis:
    image: redis:latest
    container_name: kubeauction-redis
    ports:
      - "6379:6379"
    volumes:
      - /tmp/kubeauction/redis:/data
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
    networks:
      - kubeauction-net

  minio:
    image: minio/minio:latest
    container_name: kubeauction-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - /tmp/kubeauction/minio:/data
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    networks:
      - kubeauction-net

  kubeauction:
    image: kubeauction-api:latest
    container_name: kubeauction-api
    ports:
      - "8080:8080"
    depends_on:
      - mongo
      - redis
      - minio
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://mongo:27017/kubeauction
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      MINIO_URI: http://minio:9000
      MINIO_USER: minioadmin
      MINIO_KEY: minioadmin
      SPRING_REDIS_TIMEOUT: 10000
      SPRING_REDIS_CONNECT_TIMEOUT: 10000
    networks:
      - kubeauction-net
    restart: unless-stopped

  notifications-worker:
    image: kubeauction-notifications:latest
    container_name: kubeauction-notifications
    depends_on:
      - redis
    environment:
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_TIMEOUT: 10000
      SPRING_REDIS_CONNECT_TIMEOUT: 10000
    networks:
      - kubeauction-net
    restart: unless-stopped

networks:
  kubeauction-net:
    driver: bridge